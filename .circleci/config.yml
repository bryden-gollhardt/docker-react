# llo: set up aws-creds context in circleci: ["AWS_ACCESS_KEY_ID", "AWS_SECRET_ACCESS_KEY", "AWS_DEFAULT_REGION"], then test a deployment!

# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  aws-elastic-beanstalk: circleci/aws-elastic-beanstalk@1.0.0
  node: circleci/node@4.1.0
jobs:
  buildAndTest:
    docker:
      - image: cimg/base:2020.01
        auth:
          username: jethred
          password: $DOCKER_PASS
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      # build and push Docker image
      - run: |
          TAG=0.1.$CIRCLE_BUILD_NUM
          docker build -t jethred/docker-react:$TAG -f Dockerfile.dev .
          echo $DOCKER_PASS | docker login --username $DOCKER_USER --password-stdin
          docker push jethred/docker-react:$TAG
          docker run -e CI=true jethred/docker-react:$TAG npm run test
          rm Dockerfile
          mv Dockerfile.dev Dockerfile

workflows:
  elastic-beanstalk-workflow:
    jobs:
      - buildAndTest
      - aws-elastic-beanstalk/deploy:
          context: aws-creds
          environment-name: DockerReact-env
          filters:
            branches:
              only:
                - master
          requires:
            - buildAndTest